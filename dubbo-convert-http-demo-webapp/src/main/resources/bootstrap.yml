server:
  port: 8081
spring:
  application:
    name: dubbo-convert-http-demo
  cloud:
    inetutils:
      preferredNetworks: [ '192.168' ]
    nacos:
      config:
        server-addr: 192.168.40.56:8848 #nacos注册中心地址
        namespace: public
        group: ${spring.application.name} #分组ID，这里使用spring.application.name的值
        file-extension: properties
        refresh-enabled: true
        shared-configs:
          - data-id: config.properties # 通用配置
            group: ${spring.cloud.nacos.config.group}
            refresh: true
          - data-id: cache.properties # 缓存配置
            group: ${spring.cloud.nacos.config.group}
            refresh: false
          - data-id: mq.properties # MQ配置
            group: ${spring.cloud.nacos.config.group}
            refresh: false
          - data-id: db.properties # 数据库配置
            group: ${spring.cloud.nacos.config.group}
            refresh: false
          - data-id: log4j2-spring.xml # log4j2配置
            group: ${spring.cloud.nacos.config.group}
            refresh: true
      discovery:
        server-addr: ${spring.cloud.nacos.config.server-addr}
        service: ${spring.application.name}
        namespace: ${spring.cloud.nacos.config.namespace}
logging:
  config: classpath:log4j2-spring.xml

management:
  endpoints:
    web:
      exposure:
        include:
          - "prometheus"
          - "health"
        exclude:
          - "solr"
          - "elasticsearch"
  metrics:
    tags:
      application: ${spring.application.name}
dubbo:
  protocol:
    id: dubbo
    name: dubbo
    port: -1
  application:
    id: ${spring.application.name}
    name: ${spring.application.name}
  scan:
    base-packages: jclipper.dubbo.demo.remote
  registry:
    address: spring-cloud://localhost
  provider:
    timeout: 50000
    retries: 0
    accesslog: './logs/${spring.application.name}.log'
#    loadbalance: talbAdaptive
  #    version: 1.0.0
  #    group: ${spring.application.name}
  consumer:
    lazy: true
    timeout: 50000
    retries: 0
    check: false
  cloud:
    subscribed-services: ${spring.application.name}


jclipper:
  swagger:
    enable: true
    base-package: jclipper.dubbo.demo
  dubbo:
    convert:
      http:
        enabled: true
        scan-packages:
          - jclipper.dubbo.demo.remote.api
        application: dubbo-convert-http-demo